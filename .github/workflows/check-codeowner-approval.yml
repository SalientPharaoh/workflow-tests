name: Check Codeowner Approval

on:
  pull_request_review:
    types: [submitted, edited, dismissed]

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  check-codeowner-approval:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            const files = await github.paginate(
              github.rest.pulls.listFiles,
              { owner, repo, pull_number: prNumber, per_page: 100 }
            );
            console.log(files.map(f => f.filename));
            
            const reviews = await github.paginate(
              github.rest.pulls.listReviews,
              {
                owner: owner,
                repo: repo,
                pull_number: prNumber,
                per_page: 100,
              }
            );
            console.log("=== REVIEWS ===");
            for (const r of reviews) {
              console.log(`${r.user.login}: ${r.state}`);
            }
            

          
      - name: Get PR reviews
        id: get-reviews
        env:
          GH_TOKEN: ${{ github.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}
        run: |
          echo "Fetching reviews for PR #$PR_NUMBER..."
          REVIEWS=$(gh api repos/$REPO/pulls/$PR_NUMBER/reviews --jq '.[] | select(.state == "APPROVED") | .user.login' | paste -sd ',' -)
          echo "Approved by: $REVIEWS"
          echo "reviews=$REVIEWS" >> $GITHUB_OUTPUT
          
      - name: Check if codeowner approved
        id: check-approval
        env:
          CODEOWNERS: ${{ steps.fetch-codeowners.outputs.codeowners }}
          REVIEWS: ${{ steps.get-reviews.outputs.reviews }}
        run: |
          echo "Codeowners: $CODEOWNERS"
          echo "Approved by: $REVIEWS"
          
          if [ -z "$CODEOWNERS" ]; then
            echo "No codeowners found"
            exit 1
          fi
          
          if [ -z "$REVIEWS" ]; then
            echo "❌ No approvals found for this PR"
            echo "approved=false" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          # Convert comma-separated lists to arrays
          IFS=',' read -ra CODEOWNER_ARRAY <<< "$CODEOWNERS"
          IFS=',' read -ra REVIEW_ARRAY <<< "$REVIEWS"
          
          # Check if any reviewer is a codeowner
          APPROVED=false
          for reviewer in "${REVIEW_ARRAY[@]}"; do
            for codeowner in "${CODEOWNER_ARRAY[@]}"; do
              if [ "$reviewer" == "$codeowner" ]; then
                echo "✅ PR approved by codeowner: $reviewer"
                APPROVED=true
                break 2
              fi
            done
          done
          
          if [ "$APPROVED" = true ]; then
            echo "approved=true" >> $GITHUB_OUTPUT
            echo "✅ Codeowner approval requirement met"
          else
            echo "approved=false" >> $GITHUB_OUTPUT
            echo "❌ PR not approved by any codeowner"
            echo "Required approval from one of: $CODEOWNERS"
            exit 1
          fi
